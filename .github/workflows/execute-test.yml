name: "Execute Tests"

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
    inputs:
      ref:
        description: the branch, tag or SHA to checkout
        required: true

jobs:
  PrepareEnvironment:
    if: false
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
      # - name: Setup node for ${{ matrix.target }}
      #   uses: actions/setup-node@v2-beta
      #   with:
      #     node-version: ${{ matrix.node-version }}
      - name: getting npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}_${{ matrix.node-version }}_${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{  matrix.os }}_${{ matrix.node-version }}

      - name: installing dependencies
        run: npm install

  # CodeQualiy:
  #   runs-on: macos-latest
  #   if: false
  #   steps:
  #     - name: Linting => ${{ github.ref }}
  #       run: |
  #         set -xeuo pipefail
  #         echo "linting the app"
  #         npm ci
  #         npm run lint
  GitHub-Testing:
    if: true
    runs-on: ${{ matrix.os }}
    # needs: [PrepareEnvironment]
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        # os: [macos-latest, macos-11.0, windows-latest]
        os: [
            macos-latest,
            ubuntu-latest,
            ubuntu-20.04,
            ubuntu-16.04,
            windows-latest,
          ] # macos-11.0 does not seem to work on github :(
        # os: [macos-latest, macos-11.0, ubuntu-latest, ubuntu-20.04, ubuntu-16.04, windows-latest]
        # based on : https://nodejs.org/en/about/releases/
        node-version: [14.x, 15.x, 16.x]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: setup Linux environment
        if: startsWith(matrix.os, 'ubuntu')
        run: chmod +x ${SCRIPTS}/linux-setup.sh && ${SCRIPTS}/linux-setup.sh

      - name: setup MAC environment
        if: startsWith(matrix.os, 'macos')
        run: chmod +x ${SCRIPTS}/mac-setup.sh && ${SCRIPTS}/mac-setup.sh

      - name: setup Windows environment
        if: startsWith(matrix.os, 'windows')
        run: |
          $ErrorActionPreference='Stop'
          choco feature disable -n=showDownloadProgress
          #  wget https://github.com/dokan-dev/dokany/releases/download/v1.2.2.1000/DokanSetup_redist.exe -OutFile DokanSetup_redist.exe
          # .\DokanSetup_redist.exe /passive /norestart
          # wget https://download.visualstudio.microsoft.com/download/pr/11100229/78c1e864d806e36f6035d80a0e80399e/VC_redist.x86.exe -OutFile VC_redist.x86.exe
          # .\VC_redist.x86.exe /passive /norestart
          curl.exe --output vc_redist.x64.exe --location --url https://aka.ms/vs/16/release/vc_redist.x64.exe
          Start-Process msiexec.exe -Wait -ArgumentList '/I vc_redist.x64.exe /quiet /qn /norestart /L*V “vc.log”’
          curl.exe --output dokan64.msi --location  https://github.com/dokan-dev/dokany/releases/latest/download/Dokan_x64.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I dokan64.msi /quiet /qn /norestart /L*V "dokan.log"'
          curl.exe --output cryfs64.msi --location --url https://github.com/cryfs/cryfs/releases/download/0.10.2/cryfs-0.10.2-win64.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I cryfs64.msi /quiet /qn /norestart /L*V "cryfs.log"'
          echo "::group::Printing logs"
          type *.log
          echo "::endgroup::"
          copy 'C:\Program Files\CryFS\0.10.2\bin\*' 'C:\Windows' 
          echo "C:\Program Files\CryFS\0.10.2\bin\" >> $GITHUB_PATH
          setx /M CRYFS_FRONTEND "noninteractive"
          echo "::group::installing encfs4win"
          echo "::endgroup::"
          choco install encfs4win --pre
          echo "C:\Program Files (x86)\encfs'\" >> $GITHUB_PATH
          copy "C:\Program Files (x86)\encfs\*" "C:\Windows"
          encfs.exe --version
          cryfs.exe --version
          dir "C:\Program Files\dokan"

      - name: installing deps and build code
        run: npm ci && npm build

      - name: executing tests
        run: npm run test

  Travis-Testing:
    runs-on: ubuntu-latest
    if: false
    env:
      BRANCH_FULL: ${{ github.ref }}
      TRAVIS_TOKEN: ${{ secrets.TRAVIS_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
      - run: set -xeuo pipefail
      - run: echo ::set-env name=BRANCH::$(basename $BRANCH_FULL)
      # it requires the travis_token secret
      # TODO transform this into github action (independent)
      - name: Testing on Travis => ${{ github.ref }}
        run: |
          echo ${{ matrix.target }}
          cd ./build
          pip install -r requirements.txt
          python3 travis.py
